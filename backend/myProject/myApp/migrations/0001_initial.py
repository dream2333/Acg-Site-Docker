# Generated by Django 4.1.4 on 2022-12-12 15:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "signature",
                    models.CharField(blank=True, max_length=30, verbose_name="签名档"),
                ),
                (
                    "mobile",
                    models.CharField(blank=True, max_length=11, verbose_name="手机号"),
                ),
                (
                    "avatar",
                    models.ImageField(
                        default="img/defaultAvatar.png",
                        upload_to="img/",
                        verbose_name="头像",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False, help_text="用户是否可以登录到后台管理页面", verbose_name="管理权限"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="账户是否可用，禁用此选项可在不删除账号的前提下封禁用户.",
                        verbose_name="登录权限",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="用户是否具有全部的用户组权限，勾选后无需添加组权限",
                        verbose_name="超级管理员",
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        default="新用户 文艺青年",
                        help_text="请用空格分隔",
                        max_length=200,
                        verbose_name="个人标签",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(default="", max_length=150, verbose_name="名称"),
                ),
                (
                    "intro",
                    models.CharField(default="", max_length=200, verbose_name="简介"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="时间"),
                ),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        help_text="封面长宽比必须为1.6:1,否则可能产生显示错误",
                        null=True,
                        upload_to="img/",
                        verbose_name="封面",
                    ),
                ),
                (
                    "video",
                    models.FileField(
                        default="video/test_video.mp4",
                        upload_to="video/",
                        verbose_name="视频",
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        default="日漫 搞笑",
                        help_text="请用空格分隔",
                        max_length=200,
                        verbose_name="视频标签",
                    ),
                ),
            ],
            options={
                "verbose_name": "视频",
                "verbose_name_plural": "视频",
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.CharField(max_length=100, verbose_name="留言")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="时间"),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(5),
                            django.core.validators.MinValueValidator(0),
                        ],
                        verbose_name="评分",
                    ),
                ),
                (
                    "link_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myApp.video",
                        verbose_name="关联到",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "留言",
                "verbose_name_plural": "留言",
            },
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="标题")),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        help_text="封面长宽比必须为1.6:1,否则可能产生显示错误",
                        null=True,
                        upload_to="img/",
                        verbose_name="封面",
                    ),
                ),
                ("text", models.TextField(verbose_name="内容")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="作者",
                    ),
                ),
            ],
            options={
                "verbose_name": "文章",
                "verbose_name_plural": "文章",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="liked",
            field=models.ManyToManyField(
                blank=True, to="myApp.video", verbose_name="喜欢的视频"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
